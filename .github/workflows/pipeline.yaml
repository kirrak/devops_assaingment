name: NFT Bridge CI/CD Pipeline

on:
  push:
    branches:
      - kk_assignment
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Dependencies
      run: npm install
      working-directory: ./apps/nft-bridge

    - name: Install Nx CLI 
      run: npm install @nrwl/cli --save-dev
      working-directory: .  # Run this at the root of the project

    - name: Run Lint with Nx
      run: npx nx lint nft-bridge
      working-directory: .  

    - name: Fix Vulnerabilities
      run: npm audit fix --force
      working-directory: ./apps/nft-bridge

    - name: Install ESLint (if not already installed)
      run: npm install eslint-plugin-node --save-dev
      working-directory: ./apps/nft-bridge

    - name: Run Code Quality Check
      run: npm run lint
      working-directory: ./apps/nft-bridge

    # - name: Run Unit Tests
    #   run: npm test
    #   working-directory: ./apps/nft-bridge

    - name: Build Docker Image
      run: |
           docker build -f apps/nft-bridge/Dockerfile -t nft-bridge-1:latest .
           docker image ls

     # Run Docker Container
    - name: Run Docker Container
      run: |
           docker run -d --name nft-bridge-container -p 3000:3000 nft-bridge-1:latest

    - name: Wait for container to start
      run: sleep 10  # Adjust as needed

    - name: Test the Application
      run: curl -f http://localhost:3000 || exit 1  # Replace with the actual endpoint if different

    - name: Check Docker Container Logs
      run: docker logs nft-bridge-container

    # - name: Push Docker Image
    #   run: |
    #     echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    #     docker tag nft-bridge:latest your-docker-registry/nft-bridge:latest
    #     docker push your-docker-registry/nft-bridge:latest
